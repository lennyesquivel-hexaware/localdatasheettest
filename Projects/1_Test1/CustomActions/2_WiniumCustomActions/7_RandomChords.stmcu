[
  {
    "TempId": 7,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport org.openqa.selenium.winium.WiniumDriver;\nimport org.sikuli.script.App;\nimport org.sikuli.script.FindFailed;\nimport org.sikuli.script.Pattern;\nimport org.sikuli.script.Screen;\nimport java.awt.Robot;\nimport java.awt.event.KeyEvent;\nimport java.awt.AWTException;\n\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class RandomChords extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       ///\t* driver which is an instance of WiniumDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WiniumDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WiniumDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WiniumDriver driver, String[] inputValue)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WiniumDriver driver, String inputValue)\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////  \n\t\n\ttry{\n\t\tRobot robot = null;\n\n\t\ttry{\n\t\t\trobot = new Robot();\n\t\t}catch(AWTException ex){\n\t\t\tSystem.out.println(ex.getCause());\n\t\t}\n\t\tString comms = \"\";\n\t\tint tempo;\n\t\ttry {\n\t\t\ttempo = Integer.parseInt(inputValue);\n\t\t} catch (Exception exc){\n\t\t\ttempo = 120;\n\t\t\tSystem.out.println(exc.getMessage());\n\t\t}\n\t\tint bars = 4;\n\t\tint measures = 4;\n\t\tint a = bars * measures;\n\t\tfloat b = (float)a/tempo;\n\t\tfloat c = b*1000;\n\t\tint chordTime = Math.round(c);\n\t\tSystem.out.println(\"#########################\");\n\t\tSystem.out.println(\"Miliseconds each chord will play: \" + chordTime);\n\t\tSystem.out.println(\"#########################\");\n\n\t\tfor(int i=0; i<measures; i++){\n\t\t\t//comms += playChords(robot, chordTime, bars, i);\n\t\t}\n\t\tplayLight(robot);\n\t\tactionResult.comments = comms;\n\t\tactionResult.status = true;\n\t}catch(Exception exc){\n\t\tactionResult.status = false;\n\t\tactionResult.comments = exc.getMessage();\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n\n\tpublic static String playChords(Robot robot, int chordTime, int bars, int iteration){\n\t\tString comments = \"\";\n\t\tint it = iteration + 1;\n\t\tString[] majChords = {\"Cmaj\",\"C#maj\",\"Dmaj\",\"Ebmaj\",\"Emaj\",\"Fmaj\",\"F#maj\",\"Gmaj\",\"Abmaj\",\"Amaj\",\"Bbmaj\",\"Bmaj\"};\n\t\tint random;\n\t\tString randomChord;\n\t\tfor(int i=0; i<bars; i++){\n\t\t\t\tint step = i+1;\n\t\t\t\trandom = (int)(Math.random() * 11);\n\t\t\t\trandomChord = majChords[random];\n\t\t\t\tSystem.out.println(randomChord);\n\t\t\t\tcomments += playOneChord(robot, randomChord, chordTime, it, step);\n\t\t}\n\t\treturn comments;\n\t}\n\t\n\tpublic static String playOneChord(Robot robot, String chordName, int chordTime, int it, int step){\n\t\tswitch(chordName){\n\t\t\t\t\tcase \"Cmaj\":\n\t\t\t\t\t\tSystem.out.println(\"Keys on this chord: A D G\");\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_A);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_D);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_G);\n\t\t\t\t\t\trobot.delay(chordTime);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_A);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_D);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_G);\n\t\t\t\t\t\treturn \"---->STEP \" + it + \".\" + step + \": Play the \\\"\" + chordName + \"\\\" chord. <---- STATUS: PASSED\";\n\t\t\t\t\tcase \"C#maj\":\n\t\t\t\t\t\tSystem.out.println(\"Keys on this chord: W F Y\");\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_W);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_F);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_Y);\n\t\t\t\t\t\trobot.delay(chordTime);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_W);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_F);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_Y);\n\t\t\t\t\t\treturn \"---->STEP \" + it + \".\" + step + \": Play the \\\"\" + chordName + \"\\\" chord. <---- STATUS: PASSED\";\n\t\t\t\t\tcase \"Dmaj\":\n\t\t\t\t\t\tSystem.out.println(\"Keys on this chord: S T H\");\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_S);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_T);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_H);\n\t\t\t\t\t\trobot.delay(chordTime);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_S);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_T);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_H);\n\t\t\t\t\t\treturn \"---->STEP \" + it + \".\" + step + \": Play the \\\"\" + chordName + \"\\\" chord. <---- STATUS: PASSED\";\n\t\t\t\t\tcase \"Ebmaj\":\n\t\t\t\t\t\tSystem.out.println(\"Keys on this chord: E G U\");\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_E);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_G);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_U);\n\t\t\t\t\t\trobot.delay(chordTime);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_E);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_G);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_U);\n\t\t\t\t\t\treturn \"---->STEP \" + it + \".\" + step + \": Play the \\\"\" + chordName + \"\\\" chord. <---- STATUS: PASSED\";\n\t\t\t\t\tcase \"Emaj\":\n\t\t\t\t\t\tSystem.out.println(\"Keys on this chord: D Y J\");\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_D);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_Y);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_J);\n\t\t\t\t\t\trobot.delay(chordTime);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_D);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_Y);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_J);\n\t\t\t\t\t\treturn \"---->STEP \" + it + \".\" + step + \": Play the \\\"\" + chordName + \"\\\" chord. <---- STATUS: PASSED\";\n\t\t\t\t\tcase \"Fmaj\":\n\t\t\t\t\t\tSystem.out.println(\"Keys on this chord: F H K\");\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_F);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_H);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_K);\n\t\t\t\t\t\trobot.delay(chordTime);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_F);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_H);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_K);\n\t\t\t\t\t\treturn \"---->STEP \" + it + \".\" + step + \": Play the \\\"\" + chordName + \"\\\" chord. <---- STATUS: PASSED\";\n\t\t\t\t\tcase \"F#maj\":\n\t\t\t\t\t\tSystem.out.println(\"Keys on this chord: T U O\");\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_T);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_U);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_O);\n\t\t\t\t\t\trobot.delay(chordTime);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_T);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_U);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_O);\n\t\t\t\t\t\treturn \"---->STEP \" + it + \".\" + step + \": Play the \\\"\" + chordName + \"\\\" chord. <---- STATUS: PASSED\";\n\t\t\t\t\tcase \"Gmaj\":\n\t\t\t\t\t\tSystem.out.println(\"Keys on this chord: G J L\");\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_G);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_J);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_L);\n\t\t\t\t\t\trobot.delay(chordTime);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_G);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_J);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_L);\n\t\t\t\t\t\treturn \"---->STEP \" + it + \".\" + step + \": Play the \\\"\" + chordName + \"\\\" chord. <---- STATUS: PASSED\";\n\t\t\t\t\tcase \"Abmaj\":\n\t\t\t\t\t\tSystem.out.println(\"Keys on this chord: Y K P\");\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_Y);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_K);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_P);\n\t\t\t\t\t\trobot.delay(chordTime);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_Y);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_K);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_P);\n\t\t\t\t\t\treturn \"---->STEP \" + it + \".\" + step + \": Play the \\\"\" + chordName + \"\\\" chord. <---- STATUS: PASSED\";\n\t\t\t\t\tcase \"Amaj\":\n\t\t\t\t\t\tSystem.out.println(\"Keys on this chord: H O L\");\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_H);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_O);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_L);\n\t\t\t\t\t\trobot.delay(chordTime);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_H);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_O);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_L);\n\t\t\t\t\t\treturn \"---->STEP \" + it + \".\" + step + \": Play the \\\"\" + chordName + \"\\\" chord. <---- STATUS: PASSED\";\n\t\t\t\t\tcase \"Bbmaj\":\n\t\t\t\t\t\tSystem.out.println(\"Keys on this chord: U L '\");\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_U);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_L);\n\t\t\t\t\t\t//robot.keyPress(KeyEvent.VK_DEAD_ACUTE);\n\t\t\t\t\t\trobot.delay(chordTime);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_U);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_L);\n\t\t\t\t\t\t//robot.keyRelease(KeyEvent.VK_DEAD_ACUTE);\n\t\t\t\t\t\treturn \"---->STEP \" + it + \".\" + step + \": Play the \\\"\" + chordName + \"\\\" chord. <---- STATUS: PASSED\";\n\t\t\t\t\tcase \"Bmaj\":\n\t\t\t\t\t\tSystem.out.println(\"Keys on this chord: J P\");\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_J);\n\t\t\t\t\t\trobot.keyPress(KeyEvent.VK_P);\n\t\t\t\t\t\trobot.delay(chordTime);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_J);\n\t\t\t\t\t\trobot.keyRelease(KeyEvent.VK_P);\n\t\t\t\t\t\treturn \"---->STEP \" + it + \".\" + step + \": Play the \\\"\" + chordName + \"\\\" chord. <---- STATUS: PASSED\";\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn \"Not a major chord.\";\n\t\t\t\t}\n\t}\n\n\tpublic static void playLight(Robot robot){\n\t\trobot.keyPress(KeyEvent.VK_X);\n\t\trobot.keyRelease(KeyEvent.VK_X);\n\t\trobot.keyPress(KeyEvent.VK_X);\n\t\trobot.keyRelease(KeyEvent.VK_X);\n\t\trobot.delay(1000);\n\n\t\trobot.keyPress(KeyEvent.VK_J);\n\t\trobot.delay(750);\n\t\trobot.keyRelease(KeyEvent.VK_J);\n\n\t\trobot.keyPress(KeyEvent.VK_G);\n\t\trobot.keyRelease(KeyEvent.VK_G);\n\n\t\trobot.keyPress(KeyEvent.VK_H);\n\t\trobot.keyRelease(KeyEvent.VK_H);\n\n\t\trobot.keyPress(KeyEvent.VK_J);\n\t\trobot.delay(500);\n\t\trobot.keyRelease(KeyEvent.VK_J);\n\n\t\trobot.keyPress(KeyEvent.VK_L);\n\t\trobot.delay(200);\n\t\trobot.keyRelease(KeyEvent.VK_L);\n\n\t\trobot.keyPress(KeyEvent.VK_K);\n\t\trobot.delay(200);\n\t\trobot.keyRelease(KeyEvent.VK_K);\n\n\t\trobot.keyPress(KeyEvent.VK_J);\n\t\trobot.delay(200);\n\t\trobot.keyRelease(KeyEvent.VK_J);\n\n\t\trobot.keyPress(KeyEvent.VK_H);\n\t\trobot.delay(200);\n\t\trobot.keyRelease(KeyEvent.VK_H);\n\n\t\trobot.keyPress(KeyEvent.VK_G);\n\t\trobot.delay(200);\n\t\trobot.keyRelease(KeyEvent.VK_G);\n\n\t\trobot.keyPress(KeyEvent.VK_H);\n\t\trobot.delay(200);\n\t\trobot.keyRelease(KeyEvent.VK_H);\n\n\t\trobot.keyPress(KeyEvent.VK_F);\n\t\trobot.delay(200);\n\t\trobot.keyRelease(KeyEvent.VK_F);\n\n\t\trobot.keyPress(KeyEvent.VK_H);\n\t\trobot.delay(200);\n\t\trobot.keyRelease(KeyEvent.VK_H);\n\n\t\trobot.keyPress(KeyEvent.VK_K);\n\t\trobot.delay(200);\n\t\trobot.keyRelease(KeyEvent.VK_K);\n\n\t\t//robot.keyPress(KeyEvent.VK_DEAD_ACUTE);\n\t\trobot.delay(500);\n\t\t//robot.keyRelease(KeyEvent.VK_DEAD_ACUTE);\n\n\t\trobot.keyPress(KeyEvent.VK_K);\n\t\trobot.delay(200);\n\t\trobot.keyRelease(KeyEvent.VK_K);\n\t}\n\n\n   }\n\n\t\n\t\n //</Mandatory_lines>\n",
    "Type": 2,
    "Name": "RandomChords",
    "Created": null,
    "Modified": null
  }
]