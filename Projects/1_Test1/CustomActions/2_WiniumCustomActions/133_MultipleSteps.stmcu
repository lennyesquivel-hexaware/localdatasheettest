[
  {
    "TempId": 133,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\nimport java.util.List;\n\n\n//<This_lines_must_not_be_modified>\n   public class MultipleSteps extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       ///\n       /// * and a second optional parameter which can be a String or a String[] array.\n       ///  One Parameter : public ActionResult Execute(WebDriver driver)\n       ///  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting\n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\nCustomStep customStep;\nactionResult.comments = \"\";\nactionResult.status = true;\n\n\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry {\n    driver.navigate().to(\"https://www.toolsqa.com/automation-practice-table/\");\n\n\n    //List<WebElement> elements = driver.findElements(By.cssSelector(\"table.tsc_table_s13  tbody tr:first-child td\"));\n\nList<WebElement> elements = driver.findElements(actionResult.element(281));\n\n\n    actionResult.status = elements == null || elements.size() == 0 ? false : true;\n\n    for (WebElement element : elements) {\n        customStep = new CustomStep();\n\n        try {\n            if (element.getText().compareTo(\"Dubai\") == 0) {\n                customStep.comments = \"Passed for dubai data.\";\n                customStep.status = true;\n                actionResult.status = actionResult.status && true;\n            } else {\n                customStep.comments = \"Failed. Expected value Dubai. Actual value: \" + element.getText();\n                customStep.status = false;\n                actionResult.status = false;\n            }\n        } catch (Exception ex) {\n            customStep.status = false;\n            customStep.comments = ex.getMessage();\n            actionResult.status = false;\n        }\n\nactionResult.steps.add(customStep);\n    }\n}catch (Exception e){\n    actionResult.status = false;\n    actionResult.comments = e.getMessage();\n}\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "Name": "MultipleSteps",
    "Created": null,
    "Modified": null
  }
]